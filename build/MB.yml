name: $(VersionNumber).$(rev:r)
trigger: none
resources:
  - repo: self
    clean: true

variables:
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"

jobs:
- job: API_MicroServices
  displayName: 'Build API + micro services'
  pool:
    vmImage: 'windows-latest'

  steps:

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: "**/*.sln"
    displayName: "Restoring NuGet Packages"

  - powershell: 'Move-Item -Path "Directory.Build.props.tokens" -Destination "Directory.Build.props" -Force'
    displayName: "Replace Directory.Build.props with tokenized version"

  - task: replacetokens@3
    inputs:
      rootDirectory: "$(Build.SourcesDirectory)"
      targetFiles: "**/Directory.Build.props"
      encoding: "auto"
      writeBOM: true
      actionOnMissing: "fail"
      keepToken: true
      tokenPrefix: "__"
      tokenSuffix: "__"

  - task: DotNetCoreCLI@2
    inputs:
      command: "build"
      projects: "**/*.csproj"
      arguments: "--configuration $(BuildConfiguration)"
    displayName: "Build Solution"

  - template: steps/package-api-as-appservice.yml
    parameters:
      buildConfiguration: "$(BuildConfiguration)"
      outputPath: '$(Build.ArtifactStagingDirectory)\client'
      packageName: "Gateway"
      packagePath: 'MB\Component\Client\Gateway'
      pathToProject: 'MB\Component\Client\Gateway\MB.Client.Gateway.Service.csproj'
      applicationName: "MB.Client.Gateway"

  - template: steps/package-microservice-as-continuous-webjob.yml
    parameters:
      buildConfiguration: "$(BuildConfiguration)"
      outputPath: '$(Build.ArtifactStagingDirectory)\microservice'
      packageName: "Message1"
      packagePath: 'MB\Microservice\Message1'
      pathToProject: 'MB\Microservice\Message1\WebJob\MB.Microservice.Message1.WebJob.csproj'
      applicationName: "MB.Microservice.Message1"

  - template: steps/package-microservice-as-continuous-webjob.yml
    parameters:
      buildConfiguration: "$(BuildConfiguration)"
      outputPath: '$(Build.ArtifactStagingDirectory)\microservice'
      packageName: "Message2"
      packagePath: 'MB\Microservice\Message2'
      pathToProject: 'MB\Microservice\Message2\WebJob\MB.Microservice.Message2.WebJob.csproj'
      applicationName: "MB.Microservice.Message2"

  - template: steps/merge-arm-templates.yml
    parameters:
      workingDirectory: MB/Infrastructure/MB.Azure

  - task: CopyFiles@2
    displayName: "Copy MB.Azure infrastructure files to infrastructure artifact"
    inputs:
      SourceFolder: "
      MB/Infrastructure/MB.Azure"
      Contents: |
        MB.template.json
        MB.parameters.json
        Execute-AzureSqlCmd.ps1
      TargetFolder: "$(Build.ArtifactStagingDirectory)/infrastructure"
      flattenFolders: true

  - task: ArchiveFiles@2
    displayName: "Archive files: MB.Azure infrastructure"
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\infrastructure\'
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/infrastructure.zip"
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: "$(Build.ArtifactStagingDirectory)/client/MB.Client.Gateway.zip"
      artifact: "MB.API.$(Build.BuildNumber)"
    displayName: "Publishing the api artifact"

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: "$(Build.ArtifactStagingDirectory)/microservice"
      artifact: "MB.MicroServices.$(Build.BuildNumber)"
    displayName: "Publishing the microservice artifacts"

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: "$(Build.ArtifactStagingDirectory)/infrastructure.zip"
      ArtifactName: "MB.Infrastructure.$(Build.BuildNumber)"
    displayName: "Publishing the MB.Azure infrastructure artifact"

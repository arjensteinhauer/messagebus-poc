{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "MB.namePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for the resource names."
      }
    },
    "MB.environment": {
      "type": "string",
      "metadata": {
        "description": "Environment of the resource. E.g. d, t, a or p."
      }
    },
    "MB.sequenceNumber": {
      "type": "int",
      "metadata": {
        "description": "Sequence number for the resources."
      }
    },
    "MB.Diagnostics.StorageAccount.name": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account."
      }
    },
    "MB.Diagnostics.StorageAccount.storageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"]
    },
    "MB.Diagnostics.StorageAccount.location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location in which the resources should be deployed."
      }
    },
    "MB.Diagnostics.StorageAccount.tagValues": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Specific tags on Resource"
      }
    }
  },
  "variables": {
    "MB.Diagnostics.StorageAccount.resourceName": "[io.NameWithoutHypen(parameters('MB.namePrefix'), parameters('MB.environment'), parameters('MB.sequenceNumber'), parameters('MB.Diagnostics.StorageAccount.name'))]"
  },
  "functions": [
    {
      "namespace": "io",
      "members": {
        "Name": {
          "parameters": [
            {
              "name": "namePrefix",
              "type": "string"
            },
            {
              "name": "environment",
              "type": "string"
            },
            {
              "name": "sequenceNumber",
              "type": "int"
            },
            {
              "name": "resourceName",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[toLower(concat(parameters('namePrefix'), '-', parameters('environment'), '-', parameters('resourceName'), padleft(parameters('sequenceNumber'), 2, '0')))]"
          }
        },
        "NameWithoutHypen": {
          "parameters": [
            {
              "name": "namePrefix",
              "type": "string"
            },
            {
              "name": "environment",
              "type": "string"
            },
            {
              "name": "sequenceNumber",
              "type": "int"
            },
            {
              "name": "resourceName",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[toLower(concat(parameters('namePrefix'), parameters('environment'), parameters('resourceName'), padleft(parameters('sequenceNumber'), 2, '0')))]"
          }
        },
        "lockName": {
          "parameters": [
            {
              "name": "resourceName",
              "type": "string"
            },
            {
              "name": "instanceCount",
              "type": "int"
            }
          ],
          "output": {
            "type": "string",
            "value": "[toLower(concat('/Microsoft.Authorization/', parameters('resourceName'), padleft(parameters('instanceCount'), 2, '0'), '-lock'))]"
          }
        },
        "workspace": {
          "parameters": [
            {
              "name": "subscriptionId",
              "type": "string"
            },
            {
              "name": "workspaceName",
              "type": "string"
            },
            {
              "name": "workspaceResourceGroup",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[resourceId(parameters('subscriptionId'), parameters('workspaceResourceGroup'), 'Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('MB.Diagnostics.StorageAccount.resourceName')]",
      "location": "[parameters('MB.Diagnostics.StorageAccount.location')]",
      "apiVersion": "2019-06-01",
      "sku": {
        "name": "[parameters('MB.Diagnostics.StorageAccount.storageSku')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "[concat(variables('MB.Diagnostics.StorageAccount.resourceName'), '.Diagnostics.StorageAccount')]"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "providers/locks",
          "name": "[io.lockName(variables('MB.Diagnostics.StorageAccount.resourceName'), 1)]",
          "apiVersion": "2016-09-01",
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('MB.Diagnostics.StorageAccount.resourceName'))]"
          ],
          "properties": {
            "level": "CannotDelete",
            "notes": "Storage account should not be deleted"
          }
        }
      ]
    }
  ]
}
